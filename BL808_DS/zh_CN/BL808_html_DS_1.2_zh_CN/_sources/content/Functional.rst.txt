========
功能描述
========
BL808 系统框图如下所示:

.. figure:: ../../picture/SystemArch.svg
   :align: center

   系统框图

CPU
====
BL808 芯片内部包含多个 RISC-V 处理器。
M0 是一颗 32-bit RISC-V CPU，采用 5 级流水线结构，支持 RISC-V 32/16 位混编指令集，包含
64
个外部中断源，有 4 个 bits 可以用于配置中断优先级。
D0 是一颗 64-bit RISC-V CPU，采用 5 级流水线结构，支持 RISC-V RV64IMAFCV 指令架构，包含
67
个外部中断源，有 3 个 bits 可以用于配置中断优先级。

缓存
=============
BL808 的缓存提高了 CPU 访问外部存储器的效能。M0 包含 32K 指令 cache 和 16K 数据 cache；
D0 包含 32K 指令 cache 和 32K 数据 cache。

内存
=============
BL808 存储器包括：片上零延迟SRAM存储器，只读存储器，一次写入存储器，
嵌入式闪存（可选），嵌入式pSRAM（可选）。

DMA控制器
==========
BL808 DMA（直接存储器访问）控制器具有 20 个专用通道（DMA0 和 DMA2 分别有 8 个通道，DMA1 有 4 个通道），用于管理外设和存储器之间的数据传输，以
提高 CPU /总线效率。DMA 有四种传输类型，内存到内存，内存到外设、外设到内存以及外设到外设四种模式。

DMA还支持 LLI（链接列表项）功能，该链表由一系列链接列表预定义多个传输，然后硬件会根据每个 LLI 的大小和地址自
动完成所有传输。
DMA 支持的外设包括 UART、I2C、SPI、ADC、IR、GPIO、Audio、I2S、PDM、DBI、DSI。

地址映射
=========
.. table:: 内存地址映射 
    :widths: 17, 15, 17, 17, 17, 17
    :width: 100%
    :align: center

    +-----------------+-------+-------------+----------------+-------------+----------------+
    |  模块           | 大小  |  开始地址（M0）              |  开始地址（D0）              |
    +                 +       +-------------+----------------+-------------+----------------+
    |                 |       | Cache       | Non-cache      | Cache       | Non-cache      |
    +=================+=======+=============+================+=============+================+
    | OCRAM(MCU)      | 64KB  | 0x62020000  | 0x22020000     | \-          | 0x22020000     |
    +-----------------+-------+-------------+----------------+-------------+----------------+
    | WRAM(MCU)       | 160KB | 0x62030000  | 0x22030000     | \-          | 0x22030000     |
    +-----------------+-------+-------------+----------------+-------------+----------------+
    | DRAM(MM)        | 512KB | \-          | 0x3EF80000     | 0x3EF80000  | \-             |
    +-----------------+-------+-------------+----------------+-------------+----------------+
    | VRAM(MM)        | 32KB  | \-          | 0x3F000000     | 0x3F000000  | \-             |
    +-----------------+-------+-------------+----------------+-------------+----------------+

OCRAM 和 WRAM 既可以通过 AHB 总线访问，也可以通过 AXI 访问，当 CPU 使用 0x62020000 地址访问 OCRAM 时，会经过内部 Cache 并通过 AXI 转 AHB 实现对 OCRAM 的访问，
当 CPU 使用 0x22020000 地址访问 OCRAM 时，不会经过内部 Cache 并且直接通过 AHB 总线访问 OCRAM 。

.. table:: 地址映射 
    :widths: 11, 15,15,8,51
    :width: 100%
    :align: center

    +---------------+---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |  模块         |  目标         |  开始地址             | 大小  |         描述                                                                                              |
    +===============+===============+=======================+=======+===========================================================================================================+
    |   pSRAM       | pSRAM         |0x50000000             | 64MB  | pSRAM 存储器地址空间，实际大小取决于芯片型号                                                              |
    +---------------+---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |   XRAM        | XRAM          |0x40000000             | 16KB  | XRAM 存储器地址空间                                                                                       |
    +---------------+---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    | FLASH         | FlashA        | 0x58000000            | 64MB  | 应用程序地址空间，实际大小取决于芯片型号                                                                  |
    +---------------+---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    | MMPERI        | TIMER1        | 0x30009000            | 4KB   | TIMER1 控制寄存器                                                                                         |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | SPI1          | 0x30008000            | 4KB   | SPI1 控制寄存器                                                                                           |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | MM_GLB        | 0x30007000            | 4KB   | Multimedia 侧全局寄存器                                                                                   |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | DMA2D         | 0x30006000            | 4KB   | DMA2D 控制寄存器                                                                                          |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | I2C3          | 0x30004000            | 4KB   | I2C3 控制寄存器                                                                                           |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | I2C2          | 0x30003000            | 4KB   | I2C2 控制寄存器                                                                                           |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | UART3         | 0x30002000            | 4KB   | UART3 控制寄存器                                                                                          |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | DMA2          | 0x30001000            | 4KB   | DMA2 控制寄存器                                                                                           |
    +---------------+---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    | MCUPERI       | DMA1          | 0x20071000            | 4KB   | DMA1 控制寄存器                                                                                           |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | EMAC          | 0x20070000            | 4KB   | EMAC 控制寄存器                                                                                           |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | AUDIO         | 0x20055000            | 4KB   | Audio 控制寄存器                                                                                          |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | USB           | 0x20072000            | 4KB   | USB 控制寄存器                                                                                            |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | HBN           | 0x2000F000            | 4KB   | 深度睡眠控制（休眠）寄存器                                                                                |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | PDS           | 0x2000E000            | 4KB   | 睡眠控制（掉电睡眠）寄存器                                                                                |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | DMA0          | 0x2000C000            | 4KB   | DMA0 控制寄存器                                                                                           |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | I2S           | 0x2000AB00            | 256B  | I2S 控制寄存器                                                                                            |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | ISO11898      | 0x2000AA00            | 256B  | ISO11898 总线控制寄存器                                                                                   |
    +               +               +-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | UART2         | 0x2000AA00            | 256B  | UART2 控制寄存器                                                                                          |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | I2C1          | 0x2000A900            | 256B  | I2C1 控制寄存器                                                                                           |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | IR            | 0x2000A600            | 256B  | IR 控制寄存器                                                                                             |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | TIMER0        | 0x2000A500            | 256B  | TIMER0 控制寄存器                                                                                         |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | PWM           | 0x2000A400            | 256B  | PWM 控制寄存器                                                                                            |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | I2C0          | 0x2000A300            | 256B  | I2C0 控制寄存器                                                                                           |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | SPI0          | 0x2000A200            | 256B  | SPI0 控制寄存器                                                                                           |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | UART1         | 0x2000A100            | 256B  | UART1 控制寄存器                                                                                          |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | UART0         | 0x2000A000            | 256B  | UART0 控制寄存器                                                                                          |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | eFuse         | 0x20056000            | 4KB   | eFuse 存储器控制寄存器                                                                                    |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | TZ            | 0x20005000            | 4KB   | 安全 Zone 分区                                                                                            |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | SEC_ENG       | 0x20004000            | 4KB   | 安全引擎控制寄存器                                                                                        |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | GPIP          | 0x20002000            | 1KB   | 通用DAC / ADC / ACOMP接口控制寄存器                                                                       |
    +               +---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    |               | GLB           | 0x20000000            | 4KB   | 全局控制寄存器                                                                                            |
    +---------------+---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+
    | ROM           | ROM           | 0x90000000            | 128KB | Bootrom区域地址空间                                                                                       |
    +---------------+---------------+-----------------------+-------+-----------------------------------------------------------------------------------------------------------+

.. table:: DRAM/VRAM 地址空间
    :widths: 7, 13, 10, 10, 10, 10, 10, 10, 10, 10
    :width: 100%
    :align: center

    +---------------+------------------------------+---------------+----------------+-------------+-------------+-------------+-------------+-------------+-------------+
    |  DRAM/VRAM                                   |  Configure(reg_h2pf_sram_rel，reg_vram_sram_sel，reg_ispl_sram_rel，reg_blai_sram_rel)                             |
    +                                              +---------------+----------------+-------------+-------------+-------------+-------------+-------------+-------------+
    |                                              | 0，0，0，0    | 0，0，0，1     | 1，0，0，0  | 3，0，0，0  | 0，0，1，0  | 0，1，0，0  | 2，0，0，1  | 3，1，1，1  |
    +===============+==============================+===============+================+=============+=============+=============+=============+=============+=============+
    |   DRAM        | 0x3EF80000 - 0x3EF8FFFF      | \-            | \-             | \-          | \-          | \-          | \-          | \-          | 64K         |
    +               +------------------------------+---------------+----------------+-------------+-------------+-------------+-------------+-------------+-------------+
    |               | 0x3EF90000 - 0x3EF9FFFF      | \-            | \-             | \-          | \-          | \-          | \-          | \-          | 64K         |
    +               +------------------------------+---------------+----------------+-------------+-------------+-------------+-------------+-------------+-------------+
    |               | 0x3EFA0000 - 0x3EFAFFFF      | \-            | \-             | \-          | \-          | \-          | \-          | \-          | 64K         |
    +               +------------------------------+---------------+----------------+-------------+-------------+-------------+-------------+-------------+-------------+
    |               | 0x3EFB0000 - 0x3EFBFFFF      | \-            | \-             | \-          | \-          | \-          | \-          | 64K         | 64K         |
    +               +------------------------------+---------------+----------------+-------------+-------------+-------------+-------------+-------------+-------------+
    |               | 0x3EFC0000 - 0x3EFCFFFF      | \-            | \-             | \-          | 64K         | \-          | \-          | 64K         | 64K         |
    +               +------------------------------+---------------+----------------+-------------+-------------+-------------+-------------+-------------+-------------+
    |               | 0x3EFD0000 - 0x3EFDFFFF      | \-            | 64K            | \-          | 64K         | \-          | \-          | 64K         | 64K         |
    +               +------------------------------+---------------+----------------+-------------+-------------+-------------+-------------+-------------+-------------+
    |               | 0x3EFE0000 - 0x3EFEFFFF      | \-            | 64K            | 64K         | 64K         | 64K         | 64K         | 64K         | 64K         |
    +               +------------------------------+---------------+----------------+-------------+-------------+-------------+-------------+-------------+-------------+
    |               | 0x3EFF0000 - 0x3EFFFFFF      | 64K           | 64K            | 64K         | 64K         | 64K         | 64K         | 64K         | 64K         |
    +---------------+------------------------------+---------------+----------------+-------------+-------------+-------------+-------------+-------------+-------------+
    | VRAM          | 0x3F000000 - 0x3F007FFF      | 32K           | 32K            | 32K         | 32K         | 32K         | 32K         | 32K         | 32K         |
    +               +------------------------------+---------------+----------------+-------------+-------------+-------------+-------------+-------------+-------------+
    |               | 0x3F008000 - 0x3F017FFF      | 64K           | 64K            | 64K         | 64K         | 64K         | \-          | 64K         | \-          |
    +---------------+------------------------------+---------------+----------------+-------------+-------------+-------------+-------------+-------------+-------------+

中断
=====
BL808 支持内部 RTC 时钟唤醒、外部中断唤醒，以实现低功耗睡眠唤醒功能。

CPU 中断控制器支持 UART 中断、I2C 中断、SPI 中断、定时器中断、DMA 中断等在内的共
131
个可屏蔽中断触发源。

所有 I/O 引脚都可以配置为外部中断输入模式，外部中断支持同步高/低电平触发、同步上升沿/下降沿触发、
异步高/低电平触发、异步上升沿/下降沿触发和同步双边沿触发共 9 种触发类型。

启动选项
=========
BL808 支持多种启动选项，可选择从 UART、USB、Flash 闪存启动。


.. table:: 启动模式 
    :widths: 13, 8,79
    :width: 100%
    :align: center

    +---------------+---------------+-------------------------------------------------------------------------------+
    |  启动引脚     |  电平         |   描述                                                                        |
    +===============+===============+===============================================================================+
    | GPIO39        | 1             |  从 UART(GPIO14/15)/USB启动，该模式主要用于 Flash 下载或者下载镜像到 RAM 执行 |
    +               +---------------+-------------------------------------------------------------------------------+
    |               | 0             |  从 Flash 启动应用镜像                                                        |
    +---------------+---------------+-------------------------------------------------------------------------------+

电源管理单元
=============
电源管理单元（PMU）管理整个芯片的电源，可分为运行、空闲、睡眠、休眠和电源关闭模式。软件可配置进入睡眠
模式时，通过 RTC 定时器或 EINT 来唤醒，以达到低功耗电源管理。
睡眠模式非常灵活，可以使应用配置为最低功耗。

时钟架构
=========
时钟控制单元为核心MCU和外围SOC设备生成时钟。时钟源可以是XTAL，PLL或RC振荡器。 
通过适当的配置（例如sel，div，en等）来动态节省功耗。

.. figure:: ../../picture/SystemClock.svg
   :align: center

   系统时钟架构
   
.. figure:: ../../picture/MoudleClock.svg
   :align: center

   模块时钟架构
   
.. figure:: ../../picture/PeripheralClock.svg
   :align: center
   :scale: 95%

   外设时钟架构


外设
======
外设包括 USB2.0、Ethernet、SD/MMC、SPI、UART、I2C、I2S、PWM、GPDAC/GPADC/、ACOMP、PIR、Touch、IR remote、Display和 GPIO。

GPIO
------
BL808C 最多可达 40 个 GPIO，BL808D 最多可达 36 个 GPIO，
具有以下特性：

- 每个 GPIO 都可用作通用输入和输出功能，上拉/下拉/浮空可由软件配置
- 每个 GPIO 都支持中断功能，中断支持同步高/低电平触发、同步上升沿/下降沿触发、异步高/低电平触发、异步上升沿/下降沿触发和同步双边沿触发
- 每个 GPIO 均可设置为高阻态，用于低功耗模式

UART
------
芯片内置四个通用异步串行收发器(UART0/1/2/3)，具有以下特性：

- 支持硬件的 CTS 和 RTS 流控
- 支持 LIN 主/从功能
- 可配置的数据位、停止位和奇偶校验位
- 支持普通/固定字符的自动波特率检测
- 工作时钟可以选择为 BCLK 、XCLK 或 160MHz, 波特率最大支持 10Mbps
- TX 和 RX 具有独立 FIFO，FIFO深度为 32 字节，支持 DMA 功能

SPI
---------
芯片内置两个 SPI，可以配置为主机模式或者从机模式，SPI 模块时钟是 XCLK 或 160MHz，具有以下特性：

- 主机模式下，时钟频率最高为 80 MHz
- 从机模式下，允许主机最大的时钟频率为 80 MHz
- 每帧的位宽可以配置为 8 位/ 16 位/ 24 位/ 32 位
- 自适应的 FIFO 深度变化特性，适配高性能的场景应用
  
  * 当位宽为 32 位时，FIFO 的深度为 8
  * 当位宽为 24 位时，FIFO 的深度为 8
  * 当位宽为 16 位时，FIFO 的深度为 16
  * 当位宽为 8 位时，FIFO 的深度为 32
- 支持DMA传输模式

I2C
---------
芯片内置四个 I2C 接口，具有以下特性：

- 支持多主机模式和仲裁功能
- 工作时钟可以选择为 BCLK 或者 XCLK
- 具有器件地址寄存器，寄存器地址寄存器，寄存器地址长度可设置为 1 字节/ 2 字节/ 3 字节/ 4 字节
- I2C 具有独立收发 FIFO，FIFO 深度为 2 words
- 支持 DMA 功能

I2S
---------
芯片内置一个 I2S 接口，具有以下特性：

- 支持主模式以及从模式
- 支持 Left-justified/ Right-justified/ DSP 等数据格式，数据宽度可配置为 8/16/24/32 比特
- 工作时钟可以选择为 BCLK 或者 XCLK
- 除单声道/双声道模式之外，同时支持四声道与六声道模式
- 支持播放单声道音频复制为双声道模式
- 支持动态静音切换功能
- I2S 具有独立收发 FIFO，FIFO 深度为 16 words
- 支持 DMA 功能

EMAC
--------------------
EMAC 模块是一个兼容 IEEE 802.3 的 10/100Mbps 以太网 MAC(Ethernet Media Access Controller)，具有以下特性：

- 兼容 IEEE 802.3 定义的 MAC 层功能
- 支持 IEEE 802.3 定义的 MII/RMII 接口的 PHY
- 通过 MDIO 接口与 PHY 交互
- 支持 10Mbps 与 100Mbps 以太网
- 支持半双工与全双工
- 在全双工模式下，支持自动流控及生成控制帧
- 在半双工模式下，支持碰撞检测及重传
- 支持 CRC 的生成及校验
- 数据帧前导生成及移除
- 发送时，自动扩展短的数据帧
- 检测过长或过短的数据帧 (长度限制)
- 可传输长数据帧 (> 标准以太帧长度)
- 自动丢弃重发次数超限或帧间隙过小的数据包
- 广播包过滤
- 用于保存多达 128 个 BD(Buffer Descriptor) 的内部 RAM
- 在发送时，支持将一个数据包分拆配置到多个连续的 BD
- 发送/接收的各种事件标志
- 在事件发生时产生对应中断

EMAC 时序图如下所示：

.. figure:: ../../picture/EMACTiming.svg
   :align: center

   EMAC 时序图

.. table:: 使用 RX Clock 对应的时序条件
    :width: 100%
    :widths: 10, 20, 10, 10, 10, 10, 30
    :align: center

    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | 将寄存器 eth_cfg0 对应的位设置为：cfg_inv_eth_rx_clk = 1，cfg_inv_eth_tx_clk = 0，cfg_sel_eth_ref_clk_o = 0   |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | 时序参数（1.8V, Load = 20PF）        | 最小值 | 典型值 |  最大值             | 单位   | 备注                  |
    +=================+====================+========+========+=====================+========+=======================+
    | T\ :sub:`cyc`\  |Clock Cycle         | \-     | 20     | \-                  | ns     | Clock From ETH PHY    |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | T\ :sub:`vld`\  |Output Valid Delay  | 10.37  | \-     | 22                  | ns     | TXD/TX_EN             |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | T\ :sub:`su`\   |Input Setup Time    | 6      | \-     | \-                  | ns     | RXD/RX_DV/RXERR       |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | T\ :sub:`h`\    |Input Hold Time     | 0      | \-     | \-                  | ns     | RXD/RX_DV/RXERR       |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+

.. table:: 不使用 RX Clock 对应的时序条件
    :width: 100%
    :widths: 10, 20, 10, 10, 10, 10, 30
    :align: center

    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | 将寄存器 eth_cfg0 对应的位设置为：cfg_inv_eth_rx_clk = 0，cfg_inv_eth_tx_clk = 0，cfg_sel_eth_ref_clk_o = 0   |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | 时序参数（1.8V, Load = 20PF）        | 最小值 | 典型值 |  最大值             | 单位   | 备注                  |
    +=================+====================+========+========+=====================+========+=======================+
    | T\ :sub:`cyc`\  |Clock Cycle         | \-     | 20     | \-                  | ns     | Clock From ETH PHY    |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | T\ :sub:`vld`\  |Output Valid Delay  | 10.374 | \-     | 22                  | ns     | TXD/TX_EN             |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | T\ :sub:`su`\   |Input Setup Time    | 5      | \-     | \-                  | ns     | RXD/RX_DV/RXERR       |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | T\ :sub:`h`\    |Input Hold Time     | 3      | \-     | \-                  | ns     | RXD/RX_DV/RXERR       |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+


TIMER
------------
芯片内置两个 32-bit 通用定时器和一个看门狗定时器，具有以下特性：

- 通用定时器的时钟源可以选择 FCLK/32K/XTAL，看门狗定时器的时钟源可以选择FCLK/32K/XTAL
- 每个计数器都有 8-bit 分频器
- 每组通用定时器都包含三个比较寄存器，支持比较中断，计数模式支持 FreeRun 模式和 PreLoad 模式
- 16-bit 看门狗定时器，支持中断或复位两种看门狗溢出方式

PWM
---------
芯片内置 2 组 PWM 信号，每组包含 4 通道 PWM 信号输出，每通道可以设置为 2 路互补 PWM，具有以下特性：

- 三种时钟源 BCLK/XCLK/32K 可供选择
- 分频寄存器和周期寄存器位宽为 16-bit
- 每通道 PWM 都支持输出极性可调，双门限值设定，增加脉冲输出灵活性
- 每通道 PWM 都有独立的死区时间设定
- 每路 PWM 都有独立的连接开关用来选择是否与内部计数器相连，并可设定不连接时的默认输出电平
- 软件刹车和外部刹车信号可以将 PWM 输出电平置于预先设定的状态
- 多达 11 种可用于触发 ADC 转换的触发源

IR(IR-remote)
------------------
芯片内置一个红外遥控，具有以下特性：

- 支持发送和接收两种模式
- 在非自由模式下发送最多支持 128-bit 数据位，自由模式下可连续发送任意长度数据
- 既支持以固定协议 NEC、 RC-5 接收数据，也支持以脉冲宽度计数方式接收任意格式数据
- 时钟源为 XCLK，最高工作频率为 32MHz，具有强大的红外波形编辑能力，可发出符合各种协议的波形，发射功率有 15 档可调
- 接收 FIFO 深度为 128 字节，发送 FIFO 深度为 16 字节
- 发送支持 DMA 模式

PDM
---------
芯片内置一个 PDM 音频处理模块，具有以下特性：

- 集成3路数字滤波器, 可支持3路数字麦输入
  
  * 采样率：8k~48k
  * 信噪比 > 110dB
  * 数据有效位宽 20 bit
  * 数字增益： -95.5 ~ +32.5dB, 0.5dB一档
  
- 独立可调的三通道高通滤波器
- 复用GPIO输入（1个时钟输出，2个数据输入）
- 发送 FIFO 位宽 32bit，深度48
- 支持DMA传输模式




视频编码
========

简介
-----------
VENC采用H264视频编码标准, 主要是以预测及运动补偿等方式进行压缩, 并以环路滤波提升画质, 兼顾码流传输和图像品质要求。

主要特点
---------------
- 1920x1080p @ 30fps + 640x480 @ 30fps, BP/MP
- 输入: Semi-Planar YCbCr 4:2:0
- 输出: NALU(Network Abstract Layer Uint) in byte stream format
- CBR/VBR mode
- 最大8个ROI
- 最大16个OSD编码区域
- 支持软件模式和连动模式
- 可动态配置最大/最小量化參数
- 可动态配置I/P帧目标位元
- 可动态配置I帧距离

与传感器和显示接口
==================

与传感器
----------------

- MIPI-CSI

    1. 支持1-/2-lane模式
    2. 支持硬件解码(RAW8/10/12/14, RGB565/888, YUV422 8-/10-bit)或是软件解码

- DVP

    1. 支持RAW 12-bit data 
    2. 支持YUV/RGB 8-bit 格式
    3. 支持影像压缩模式

与显示器
--------------------

- MIPI-DSI

    1. 支持1-/2-/4-lane模式
    2. 支持RGB565/666/888以及YUV422 8-bit格式
    3. 支持Sync Event Mode或Sync Pulse Mode
    4. 支持Escape Mode，且可搭配DMA功能使用

- MIPI-DBI

    1. 支持Type-B (8-bit)、Type-C Option 1 (3-wire)以及Type-C Option 3 (4-wire) 模式
    2. 支持RGB565/666/888格式
    3. 内建YUV2RGB转换模块
    4. 支持DMA功能

- MIPI-DPI

    1. 支持data 16-bit模式
    2. 支持RGB565格式

- QSPI

    1. CMD/ADDR/DATA可任意选择1-/4-wire模式，因此QSPI 111/114/144/444模式皆可支持
    2. 支持RGB565/666/888格式
    3. 内建YUV2RGB转换模块
    4. 支持DMA功能

