===========
AUDIO
===========

Overview
=====
An AUDIO processing module is built in the chip, supporting pdm/analog interface microphone recording and stereo playback.

Features
===========
- Two 20-bit ADCs are integrated to support three analog mic differential inputs

   - Sampling rate: 8k–96k
   - Signal to noise ratio (AW): 97 dB @ 0 dB gain
   - Harmonic distortion + noise: -87 dB @ 0 dB gain
   - Analog pre-amplifier gain: 0 dB, 6–42 dB, 3 dB per gear

- A low-noise bias power supply with adjustable voltage supplies power to the analog MIC, and the adjustment range is 1.8 V–2.5 V
- Adjustable high-pass filter and independent digital volume control for ADC channel
- A 5-band parametric equalizer for ADC channel
- Support digital mic interface, with input GPIO multiplexed
- Integrated with one 20-bit DAC that support two analog LINEOUT differential outputs with ramp power-on function

   - Sampling rate: 8k–192k
   - Signal to noise ratio (AW): 103dB @ 0dB gain
   - Harmonic distortion + noise: -90dB @ 0dB gain
   - Analog output gain: 0 dB, 6–42 dB, 3 dB per gear

- Independent digital volume control that supports soft volume adjustment/mute, suitable for DAC playback channel
- A 10-band parametric equalizer supporting dynamic range control and flexible adjustment, suitable for DAC playback channel
- Supports voice activity detection that suits low-power voice wakeup applications
- TX/RX FIFO of 32-bit width
- Supports DMA transfer mode

Functional Description
===========

The block diagram of AUDIO is shown as follows.

AUIDO has 
two 
ADCs, which are connected to the volume control module after performing PGA gain and passing through decimation and HPF filters. Users can control mute/unmute, volume, and audio fade-in/fade-out effect through the volume control module.
The 5-band EQ filter can improve the audio performance, perform gain and attenuation in each frequency band of the audio, and thus optimize the recording timbre.
AGC will adjust volume according to the amplitude of audio data, to enhance the recording performance and reduce the top distortion of recording.
The built-in VAD wakeup module can distinguish the noise signal from the useful audio signal in the environment, and when a valid audio signal is detected, a VAD_INT event will be generated.
The recorded data will be stored in the FIFO with a depth of 32, and the storage format in FIFO is controlled by the register RX_FIFO_CTRL[25:24]. RX_FIFO_CTRL[5] configures the resolution of sampling.
The PDM digital interface or analog microphone interface can be used as the recording data interface, and the interface type is controlled by the DAC_0[12] DAC_0[15] DAC_0[18] bit.

AUDIO has 
one DAC.
After being taken out from FIFO, processed by the audio mixer and EQ filter, undergone volume control and inserted into the filter, the data is modulated into analog signal for driving the speaker to play.
The audio mixer can mix the audio data read out from FIFO with the recording data of ADC channel. The EQ filter performs gain reduction on each frequency band, thus changing the timbre of the played audio.
The volume control module will control the audio volume and the fade-in/fade-out effect.

AUDIO Interrupt
-------------
AUDIO supports the following interrupt control modes:

- TX FIFO request interrupt
- TX FIFO underrun interrupt
- TX FIFO overrun interrupt
- RX FIFO request interrupt
- RX FIFO underrun interrupt
- RX FIFO overrun interrupt
- Recording volume adjustment interrupt
- Playback volume adjustment interrupt
- VAD interrupt

A TX FIFO request interrupt will be generated when TX_DRQ_CNT in TX_FIFO_CTRL is greater than TX_TRG_LEVEL. When the condition is not met, the interrupt flag will be cleared automatically.

When there is no data in TX FIFO, but the user enables TX FIFO modulation through TX_CH_EN in TX_FIFO_CTRL, the TX FIFO underrun interrupt will be generated.

When the user fills in data that exceeds the maximum depth of TX FIFO, it will lead to TX FIFO overflow and cause a TX FIFO overrun interrupt.

A RX FIFO request interrupt will be generated when RX_DRQ_CNT in RX_FIFO_CTRL is greater than RX_TRG_LEVEL. When the condition is not met, the interrupt flag will be cleared automatically.

When there is no data in RX FIFO, but the user enables RX FIFO modulation through RX_CH_EN in RX_FIFO_CTRL, the RX FIFO underrun interrupt will be generated.

When the user fills in data that exceeds the maximum depth of RX FIFO, it will lead to RX FIFO overflow and cause a RX FIFO overrun interrupt.

When the recording volume of ADC is completely adjusted, it will trigger the ADC volume adjustment completion interrupt. In general application scenarios, the volume adjustment of ADC is completed immediately.

When the playback volume of DAC is completely adjusted, it will trigger the DAC volume adjustment completion interrupt. As the playback of DAC supports fade-in/fade-out effect, the volume adjustment may not be completed immediately. The adjustment time depends on the register DAC_H_CTRL_MODE.

FIFO Format Control
--------------
TX_FIFO_CTRL and RX_FIFO_CTRL (collectively FIFO_CTRL, as they are the same) decide the format of audio data stored in FIFO.

Users select the resolution of audio by configuring FIFO_CTRL\[5\].

When 16-bit resolution is selected, the FIFO controller supports the following four data storage formats, which are determined by FIFO_CTRL\[25:24\].

- Mode 0:

   - DATA\[31:0\] = {FIFO\[19:14\],16'h0}

- Mode 1:

   - DATA\[31:0\] = {8{FIFO\[19\]},FIFO\[19:4\],8'h0}

- Mode 2:

   - DATA\[31:0\] = {12{FIFO\[19\]},FIFO\[19:4\],4'h0}

- Mode 3:

   - DATA\[31:0\] = {16{FIFO\[19\]},FIFO\[19:4\]}

During recording or playing, the conversion result of 32-bit data or the digital audio source to be demodulated is on the left, denoted as DATA\[31:0\]. The format of data to be stored in FIFO is shown on the right. When the actual resolution of the recording is 20-bit, if the 16-bit resolution is selected, the data with 20-bit resolution must be properly cut. Thus, the high 16 bits of the data with 20-bit resolution are selected as the final result FIFO\[19:14\] and stored in the position of the high 16 bits, while the low 16 bits are filled with 0.
Modes 1, 2, and 3 are expressed in the same way as Mode 0. The 8{FIFO\[19\]} symbol indicates that the high 8 bits will be padded with the value of bit\[19\].

Therefore, when a 16-bit resolution is selected, AUDIO provides four modes to store the digital results of conversion/output.

In the case of 20-bit resolution, the storage formats in the four modes are as follows:

- Mode 0:

   - DATA\[31:0\] = {FIFO\[19:0\],12'h0}

- Mode 1:

   - DATA\[31:0\] = {8{FIFO\[19\]},FIFO\[19:0\],4'h0}

- Mode 2:

   - DATA\[31:0\] = {12{FIFO\[19\]},FIFO\[19:0\]}

- Mode 3:

   - DATA\[31:0\] = {16{FIFO\[19\]},FIFO\[19:4\]}

Distribution of MSB

- Mode 0:

   - The MSB of data is 31 bits

- Mode 1:

   - The MSB of data is 23 bits

- Mode 2:

   - The MSB of data is 19 bits

- Mode 3:

   - The MSB of data is 15 bits

Startup of FIFO and DMA transfer
------------------------
The data in FIFO of the AUDIO module can be transferred by DMA.

The user can obtain the current amount of valid data in FIFO in real time through the register RX_FIFO_STATUS/TX_FIFO_STATUS.

The FIFO count threshold (8/16/32) for initiating DMA request is selected by configuring FIFO_CTRL\[15:14\], or can be determined by FIFO_CTRL\[22:16\].

When the count value is greater than the set threshold, and the FIFO of the channel corresponding to TX_FIFO_CTRL\[9:8\] or RX_FIFO_CTRL\[12:8\] is enabled, a DMA transfer will be initiated.

When TX FIFO is started, if there is no valid data in TX FIFO, the tx underrun error will be triggered. Therefore, the software configuration sequence must be followed.

