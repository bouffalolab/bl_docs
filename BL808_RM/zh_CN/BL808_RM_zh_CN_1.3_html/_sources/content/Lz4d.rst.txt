===========
LZ4D
===========

简介
=====
LZ4是一种无损数据压缩算法，其最大的特点是解压缩速度很快，但是压缩比一般。
LZ4D是一个针对使用LZ4算法压缩后的数据块进行解压缩的功能模块。
其包含状态及控制寄存器组，用于设置输入压缩数据的起始地址，解压缩后的数据的输出地址，以及解压缩状态及可选的中断配置。

主要特征
=========
- 支持标准LZ4压缩算法压缩的数据块
- 支持对不同压缩级别的压缩数据块的解压缩
- 支持多个block的压缩数据块的解压
- 解压缩完成、出错的各种事件标志
- 在事件发生时产生对应中断

功能描述
===========

模块通过总线访问，从源地址获取压缩的数据块，通过内部算法进行解压缩之后，将解压缩的数据写入到指定的目标地址。
在解压缩过程中，模块会更新相关的寄存器，并在某些事件发生时，设置对应的标志，例如解压缩成功、错误等。这些状态进而可以向CPU申请中断。

时钟
============
LZ4D模块需要一路工作时钟。

编程流程
===========

解压缩数据
-----------
- 打开模块时钟
- 首先禁用模块，然后将需要解压缩的原始数据(不包含压缩文件头)地址写入到源数据起始地址寄存器中
- 准备足够大的连续内存，用于保存解压缩后的数据，长度建议对齐到4字节边界。将此内存块的地址写入到目的数据起始地址寄存器中
- 如果需要使用中断，那么需要安装中断处理函数，并设置对应的中断使能位
- 在控制寄存器中，使能模块，其就会开始解压缩
- 如果使能了完成中断，那么等待完成中断
- 如果没有使用中断，那么可以通过读取状态寄存器来判断的方式，等待解压缩完成

.. only:: html

   .. include:: lz4_register.rst

.. raw:: latex

   \input{../../zh_CN/content/lz4}