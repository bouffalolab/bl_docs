========
功能描述
========
BL702/BL704/BL706主要功能描述如下:

.. figure:: ../../picture/SystemArchitecture.svg
   :align: center

   系统框图

CPU
====
BL702/BL704/BL706 32-bit RISC CPU包含用于32位单精度算术的FPU（浮点单元），
三级流水线（IF，EXE，WB），压缩的16位和32位指令集，包含4个硬件可编程断点
的标准JTAG调试器端口，包含64个中断和16个中断级别/优先级的中断控制器，
用于低延迟中断处理。 时钟频率高达144MHz，可以动态配置用来更改时钟频率，
进入省电模式以实现低功耗。

ZigBee/BLE堆栈和应用程序均在单个32-bit RISC CPU上运行，
用来实现简单和超低功耗的应用程序。CPU性能约1.46 DMIPS / MHz；3.1 CoreMark / MHz。

缓存
=============
BL702/BL704/BL706的缓存提高了CPU访问外部存储器的效能。 
高速缓存可以部分或全部配置为TCM（紧密耦合内存）。

内存
=============
BL702/BL704/BL706存储器包括：片上零延迟SRAM存储器，只读存储器，一次写入存储器，
嵌入式闪存（可选），嵌入式pSRAM（BL704/BL706,可选）。

DMA控制器
==========
BL702/BL704/BL706 DMA（直接存储器访问）控制器具有四个专用通道，
用于管理外设和存储器之间的数据传输，以提高CPU /总线效率。 
DMA有四种传输类型，内存到内存，内存到外设、外设到内存以及外设到外设四种模式。 
DMA还支持LLI（链接列表项）功能，该链表由一系列链接列表预定义多个传输，
然后硬件会根据每个LLI的大小和地址自动完成所有传输。

DMA支持的外设包括USB，UART，I2C，I2S，SPI，ADC和DAC。

总线结构
=========
BL702/BL704/BL706总线连接与地址访问总结如下：

.. table:: 总线连接
    :widths: 19, 15, 15, 15, 18, 18
    :width: 100%
    :align: center

    +-----------+------------+-------+--------+----------+---------+
    |  从/主    |  CPU       | 以太网| DMA    |加密引擎  | 调试接口|
    +===========+============+=======+========+==========+=========+
    | 内存      | V          | V     | V      |      V   | V       |
    +-----------+------------+-------+--------+----------+---------+
    | 外设      | V          | \-    | V      |      \-  | V       |
    +-----------+------------+-------+--------+----------+---------+
    |Zigbee/BLE | V          | \-    | V      |      \-  | V       |
    +-----------+------------+-------+--------+----------+---------+


.. table:: 地址映像
    :widths: 15, 15, 10, 60
    :width: 100%
    :align: center

    +--------+------------+-------+-------------------------------+
    |  目标  |  开始地址  | 大小  |         描述                  |
    +========+============+=======+===============================+
    | RETRAM | 0x40010000 | 4KB   | 深度睡眠内存（保留RAM）       |
    +--------+------------+-------+-------------------------------+
    | HBN    | 0x4000F000 | 4KB   | 深度睡眠控制（休眠）          |
    +--------+------------+-------+-------------------------------+
    | PDS    | 0x4000E000 | 4KB   | 睡眠控制（掉电睡眠）          |
    +--------+------------+-------+-------------------------------+
    | USB    | 0x4000D800 | 1KB   | USB控制                       |
    +--------+------------+-------+-------------------------------+
    | EMAC   | 0x4000D000 | 2KB   | EMAC控制(BL704/BL706)         |
    +--------+------------+-------+-------------------------------+
    | DMA    | 0x4000C000 | 4KB   | DMA控制                       |
    +--------+------------+-------+-------------------------------+
    | QSPI   | 0x4000B000 | 4KB   | 闪存/pSRAM QSPI控制           |
    +--------+------------+-------+-------------------------------+
    | CAM    | 0x4000AD00 | 256B  | CAM 控制(BL706)               |
    +--------+------------+-------+-------------------------------+
    | I2S    | 0x4000AA00 | 256B  | I2S控制                       |
    +--------+------------+-------+-------------------------------+
    | KYS    | 0x4000A900 | 256B  | Key-Scan控制                  |
    +--------+------------+-------+-------------------------------+
    | QDEC2  | 0x4000A880 | 64B   | 正交解码器控制                |
    +--------+------------+-------+-------------------------------+
    | QDEC1  | 0x4000A840 | 64B   | 正交解码器控制                |
    +--------+------------+-------+-------------------------------+
    | QDEC0  | 0x4000A800 | 64B   | 正交解码器控制                |
    +--------+------------+-------+-------------------------------+
    | IRR    | 0x4000A600 | 256B  | 红外遥控器                    |
    +--------+------------+-------+-------------------------------+
    | TIMER  | 0x4000A500 | 256B  | 计时器控制                    |
    +--------+------------+-------+-------------------------------+
    | PWM    | 0x4000A400 | 256B  | 脉冲宽度调制控制              |
    +--------+------------+-------+-------------------------------+
    | I2C    | 0x4000A300 | 256B  | I2C控制                       |
    +--------+------------+-------+-------------------------------+
    | SPI    | 0x4000A200 | 256B  | SPI主/从控制                  |
    +--------+------------+-------+-------------------------------+
    | UART1  | 0x4000A100 | 256B  | UART控制                      |
    +--------+------------+-------+-------------------------------+
    | UART0  | 0x4000A000 | 256B  | UART控制                      |
    +--------+------------+-------+-------------------------------+
    | L1C    | 0x40009000 | 4KB   | 缓存控制                      |
    +--------+------------+-------+-------------------------------+
    | eFuse  | 0x40007000 | 4KB   | eFuse存储器控制               |
    +--------+------------+-------+-------------------------------+
    | SEC    | 0x40004000 | 4KB   | 安全引擎                      |
    +--------+------------+-------+-------------------------------+
    | GPIP   | 0x40002000 | 4KB   | 通用DAC / ADC / ACOMP接口控制 |
    +--------+------------+-------+-------------------------------+
    | MIX    | 0x40001000 | 4KB   | 混合信号寄存器                |
    +--------+------------+-------+-------------------------------+
    | GLB    | 0x40000000 | 4KB   | 全局寄存器                    |
    +--------+------------+-------+-------------------------------+
    | pSRAM  | 0x24000000 | 8MB   | pSRAM存储器                   |
    +--------+------------+-------+-------------------------------+
    | XIP    | 0x23000000 | 8MB   | XIP闪存                       |
    +--------+------------+-------+-------------------------------+
    | OCRAM  | 0x22020000 | 64KB  | 片上存储器                    |
    +--------+------------+-------+-------------------------------+
    | DTCM   | 0x22014000 | 48KB  | 数据高速缓存                  |
    +--------+------------+-------+-------------------------------+
    | ITCM   | 0x22010000 | 16KB  | 指令高速缓存                  |
    +--------+------------+-------+-------------------------------+
    | ROM    | 0x21000000 | 192KB | 只读存储器                    |
    +--------+------------+-------+-------------------------------+


中断
=====
BL702/BL704/BL706支持内部RTC时钟唤醒、外部中断唤醒，以实现低功耗睡眠唤醒功能。

CPU中断控制器支持包括UART中断、I2C中断、SPI中断、定时器中断、DMA中断等在内的共64个可屏蔽中断触发源。所有I/O引脚都可以配置为外部中断输入模式，外部中断支持高电平触发、低电平触发、上升沿触发和下降沿触发共四种触发类型。

启动选项
=========
BL702/BL704/BL706支持多种启动，可选择从UART、USB、Flash闪存启动。

电源管理单元
=============
电源管理单元（PMU）管理整个芯片的电源，可分为运行、空闲、睡眠、休眠和电源关闭模式。
软件可配置进入睡眠模式时，通过RTC定时器或EINT来唤醒，以达到低功耗电源管理。

睡眠模式非常灵活，可以使应用配置为最低功耗。

时钟架构
=========
时钟控制单元为核心MCU和外围SOC设备生成时钟。 时钟源可以是XTAL，PLL或RC振荡器。 
通过适当的配置（例如sel，div，en等）来动态节省功耗。PMU以32kHz时钟运行，
使系统在睡眠模式下保持低功耗。

.. figure:: ../../picture/clocktree.svg
   :align: center

   时钟框图

外设
======
外设包括 USB2.0，以太网，IR-remote，SPI，UART，ISO 17987，I2C，I2S，PWM，QDEC，KeyScan，ADC，DAC，
PIR，Camera。

GPIO
---------
BL702 具有 15 个 GPIO，BL704 具有 23 个 GPIO，BL706 具有 31 个 GPIO，具有以下特性：

- 每个 GPIO 都可用作通用输入和输出功能，上拉/下拉/浮空可由软件配置
- 每个 GPIO 都支持中断功能，中断支持上升沿触发，下降沿触发，高电平触发以及低电平触发
- 每个 GPIO 都可以设置为高阻态，用于低功耗模式

UART
---------
芯片内置两个通用异步串行收发器（UART0 和 UART1），具有以下特性：

- 支持LIN 主/从功能
- 工作时钟可以选择为 FCLK 或 96MHz， 波特率最大支持8M
- 支持硬件的 CTS 和 RTS 信号管理
- TX 和 RX 具有独立 FIFO，FIFO深度为128字节，支持DMA功能

SPI
---------
芯片内置一个 SPI，可以配置为主模式或者从模式，SPI 模块时钟是 BCLK，具有以下特性：

- 作为主机，时钟频率最高为 36MHz
- 作为从机，允许主机最大的时钟频率为 24MHz
- 每帧的位宽可以配置为 8 位/ 16 位/ 24 位/ 32 位
- SPI 的收发具有独立 FIFO ，FIFO 深度固定为4帧(即，如果帧的位宽是8bit，FIFO的深度是4字节)
- 支持 DMA 传输模式

I2C
---------
芯片内置一个 I2C 接口，具有以下特性：

- 支持主机模式和 7bit 寻址
- 工作时钟为 BCLK
- 具有器件地址寄存器，寄存器地址寄存器，寄存器地址长度可配为 1字节/2字节/3字节/4字节
- I2C的收发具有独立 FIFO，FIFO深度为 2 words
- 支持 DMA 功能

I2S
---------
芯片内置一个 I2S 接口，具有以下特性：

- 支持 Left-justified/ Right-justified/ DSP 等数据格式，数据宽度可配置为 8/16/24/32 比特
- 除单声道/双声道模式之外，同时支持四声道模式
- I2S 收发具有独立的 FIFO，FIFO深度为 16 帧；在数据宽度为 16 比特时，FIFO深度可以设置为 32 帧
- I2S模块具有独立的 Audio PLL，支持 48K (及其整数分频)和 44.1K (及其整数分频)两类采样率

TIMER
------------
芯片内置两个通用定时器和一个看门狗定时器，具有以下特性：

- 通用定时器的时钟源可以选择 FCLK/32K/1K/XTAL
- 看门狗定时器的时钟源可以选择 FCLK/32K/XTAL
- 每个计数器都有 8-bit 分频器
- 每组通用定时器都包含三个比较寄存器，支持比较中断，计数模式支持 FreeRun 模式和 PreLoad 模式
- 16-bit 看门狗定时器，支持中断或复位两种看门狗溢出方式

PWM
---------
芯片内置五路 PWM 信号，具有以下特性：

- 三种时钟源 BCLK/XCLK/32K 可供选择
- 分频寄存器和周期寄存器位宽为 16-bit
- 每通道 PWM 支持输出极性可调，双门限值设定，增加脉冲输出灵活性
- 支持 PWM 周期计数中断，用于统计输出脉冲数等

IR(IR-remote)
------------------
芯片内置一个红外遥控，具有以下特性：

- 支持发送和接收两种模式
- 既支持以固定协议 NEC、 RC-5 接收数据，也支持以脉冲宽度计数方式接收任意格式数据
- 时钟源为 XCLK，具有强大的红外波形编辑能力，可发出符合各种协议的波形，发射功率有15档可调
- 接收 FIFO 深度为 64 字节

USB2.0(Full Speed)
--------------------
芯片内嵌一个兼容全速 USB 的设备控制器，具有以下特性：

- 遵循全速 USB 设备标准
- 具备 8 个端点，每个端点都有 64 字节深度的 FIFO
- 除端点 0 外，其它端点均支持中断/批量/同步传输
- 具有待机/恢复功能
- USB 专用的 48MHz 时钟由内部主 PLL 直接产生

EMAC
--------------------
EMAC 模块是一个兼容 IEEE 802.3 的 10/100Mbps 以太网控制器(Ethernet Media Access Controller)，具有以下特性：

- 兼容 IEEE 802.3 定义的 MAC 层功能
- 支持 IEEE 802.3 定义的RMII 接口的 PHY，通过 MDIO 与 PHY 交互
- 支持 10Mbps 与 100Mbps 以太网
- 支持半双工与全双工，数据收发通过 Buffer Descriptor 数据结构来实现，EMAC控制内嵌AHB Master，可以直接从内存读取或者写入数据
- Buffer Descriptor 数据结构存放在 EMAC 内部 RAM，Buffer Descriptor 总个数多达 128 个，用户可以根据场景，灵活配置收发Buffer Descriptor个数

EMAC 时序图如下所示：

.. figure:: ../../picture/EMACTiming.svg
   :align: center

   EMAC 时序图

.. table:: 使用 RX Clock 对应的时序条件
    :width: 100%
    :widths: 10, 20, 10, 10, 10, 10, 30
    :align: center

    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | 将寄存器 clk_cfg3 对应的位设置为：cfg_inv_eth_rx_clk = 1，cfg_inv_eth_tx_clk = 0，cfg_sel_eth_ref_clk_o = 0   |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | 时序参数（1.8V, Load = 20PF）        | 最小值 | 典型值 |  最大值             | 单位   | 备注                  |
    +=================+====================+========+========+=====================+========+=======================+
    | T\ :sub:`cyc`\  |Clock Cycle         | \-     | 20     | \-                  | ns     | Clock From ETH PHY    |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | T\ :sub:`vld`\  |Output Valid Delay  | 7.38   | \-     | 16.3                | ns     | TXD/TX_EN             |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | T\ :sub:`su`\   |Input Setup Time    | 10     | \-     | \-                  | ns     | RXD/RX_DV/RXERR       |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | T\ :sub:`h`\    |Input Hold Time     | 0      | \-     | \-                  | ns     | RXD/RX_DV/RXERR       |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+

.. table:: 不使用 RX Clock 对应的时序条件
    :width: 100%
    :widths: 10, 20, 10, 10, 10, 10, 30
    :align: center

    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | 将寄存器 clk_cfg3 对应的位设置为：cfg_inv_eth_rx_clk = 0，cfg_inv_eth_tx_clk = 0，cfg_sel_eth_ref_clk_o = 0   |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | 时序参数（1.8V, Load = 20PF）        | 最小值 | 典型值 |  最大值             | 单位   | 备注                  |
    +=================+====================+========+========+=====================+========+=======================+
    | T\ :sub:`cyc`\  |Clock Cycle         | \-     | 20     | \-                  | ns     | Clock From ETH PHY    |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | T\ :sub:`vld`\  |Output Valid Delay  | 7.38   | \-     | 16.3                | ns     | TXD/TX_EN             |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | T\ :sub:`su`\   |Input Setup Time    | 2      | \-     | \-                  | ns     | RXD/RX_DV/RXERR       |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+
    | T\ :sub:`h`\    |Input Hold Time     | 3      | \-     | \-                  | ns     | RXD/RX_DV/RXERR       |
    +-----------------+--------------------+--------+--------+---------------------+--------+-----------------------+

QDEC
--------------------

芯片内置三组正交解码器(quadrature decoder)，用于将双路旋转编码器产生的两组相位相差 90 度的脉冲解码为对应转速和旋转
方向，具有以下特性：

- 时钟源可以选择 32K（f32k_clk）或 32M（xclk）
- 具有 16 位脉冲计数范围（-32768~32767 pulse/sample）
- 具有 12 种可配置的 sample 周期（32us~131ms per sample at 1MHz）
- 具有 16 位可设置的report 周期（0~65535 sample/report)

ADC
--------------------

芯片内置一个 12bits 的逐次逼近式模拟数字转换器 (ADC) ，具有以下特性：

- 最大工作时钟为 2MHz, 支持 12 路外部模拟输入和若干内部模拟信号选择，支持单通道转换和多通道扫描两种模式
- 支持 2.0V，3.2V 可选内部参考电压，转换结果为 12/14/16bits(通过过采样实现)左对齐模式
- 拥有深度为 32 的 FIFO，支持多种中断，支持 DMA 功能
- ADC 除了用于普通模拟信号测量外，还可以用于测量供电电压
- 可以通过测量内/外部二极管电压用于温度检测

DAC
--------------------

芯片内置一个10bits 的数字模拟转换器 (DAC），具有以下特性：

- FIFO 深度为 1，支持2路DAC调制输出
- 可用于音频播放，常规的模拟信号调制
- 工作时钟可选为 32M 或者 Audio PLL
- 支持 DMA 将内存搬运至 DAC 调制寄存器
- 输出引脚固定为 ChannelA 为 GPIO11，ChannelB 为 GPIO17

调试接口
--------------------

支持标准的JTAG 4线调试接口，支持使用Jlink/OpenOCD/CK Link等调试器进行调试。

