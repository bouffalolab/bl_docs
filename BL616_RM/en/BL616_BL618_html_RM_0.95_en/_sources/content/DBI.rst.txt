===========
DBI
===========

Overview
=====
The module also integrates the Quad Serial Peripheral Interface (QSPI) display interface. QSPI with four data lines is an extension of the SPI interface and it greatly improves the transmission efficiency.

Features
===========

- Additional support for QSPI mode, with the following features:
  * A single transmission includes a one-byte command phase, an adjustable address phase of one to three bytes, and an optional data phase.
  * Command, address and data reading and writing all support 1-wire /4-wire mode, which can be combined as needed.
- Except for QSPI mode, a single transmission supports optional command and data phases, and the QSPI interface has another address phase.
- The data phase can be set to normal mode in bytes and pixel mode in pixels:
  * The data phase (normal mode) is used to transmit configuration data. it can write up to 256 bytes and read up to 8 bytes at a time.
  * The data phase (pixel mode) is used to transmit pixel data, and the data size is in pixels. It can write 2 to the power of 24 pixels at a time and is unreadable.
- The input pixel formats support RGB and YUV444, in which RGB supports eight memory arrangements:
- YUV444 supports six memory arrangements:
  * YUVN8888
  * VUYN8888
  * NYUV8888
  * NVUY8888
  * YUV888
  * VUY888
- Hardware transcoding from YUV444 to RGB565/666/888
- The CS signal pull-up release condition can be configured

Function description
=====================

The basic block diagram of the DBI module is shown in the figure.

.. figure:: ../../picture/DBIBlock.svg
   :align: center

   DBI basic block diagram

DBI Type B
-------------

Write timing
*********
The DBI Type B mode has an 8-bit parallel data line. The sequence of writing data from the MCU to the display module is shown in the following figure:

.. figure:: ../../picture/DBITypeBWrite.svg
   :align: center

   Write timing

- CSX: Chip select signal. When the signal is low, the display module is selected, and when it is high, the display module will ignore all other interface signals
- RESX: External reset signal. When the signal is low, the display module is reset
- D/CX: Data/Command selection signal. When the signal is 0, the DB[7:0] bit is the command; when the signal is 1, the DB[7:0] bit is the RAM data or command parameter
- WRX: Parallel data write strobe signal. This signal is driven high to low during the write cycle and then pulled back high. The display module reads the information transmitted by the MCU at the rising edge of this signal. The signal is an asynchronous signal that can be terminated when not in use
- RDX: Parallel data read strobe signal. This signal is driven high to low and then pulled back high during the read cycle. The MCU reads the information transmitted by the display module at the rising edge of this signal. The signal is an asynchronous signal that can be terminated when not in use
- DB[7:0]: 8-bit data signal. Used to transfer commands, command parameters, or data

Read timing
*********
The sequence of MCU reading data from the display module is shown in the following figure:

.. figure:: ../../picture/DBITypeBRead.svg
   :align: center

   Read timing

Output RGB565
*************
The data output in RGB565 format is shown in the following figure:

.. figure:: ../../picture/DBITypeBRGB565.svg
   :align: center
   :scale: 70%

   RGB565 output

Output RGB666
*************
The data output in RGB666 format is shown in the following figure:

.. figure:: ../../picture/DBITypeBRGB666.svg
   :align: center
   :scale: 70%

   RGB666 output

Output RGB888
*************
The data output in RGB888 format is shown in the following figure:

.. figure:: ../../picture/DBITypeBRGB888.svg
   :align: center
   :scale: 70%

   RGB888 output

DBI Type C 3-Line
-------------------

Write timing
*********
The DBI Type C mode is a 3-wire 9-bit serial interface. The sequence of writing data from the MCU to the display module is shown in the following figure:

.. figure:: ../../picture/DBITypeC3Write.svg
   :align: center

   Write timing

- CSX: Chip select signal. When the signal is low, the display module is selected, and when it is high, the display module will ignore all other interface signals;
- SCL: Serial clock input signal. Used to provide a clock signal for data transmission.
- SDA: Serial data input/output signal. In a write operation, the serial data packet contains a D/CX (Data/Command) select bit and a transfer byte. If the D/CX bit is low, the transmitted byte is a command; if the D/CX bit is high, the transmitted byte is display data or command parameters.

Read timing
*********
The sequence of MCU reading data from the display module is shown in the following figure:

.. figure:: ../../picture/DBITypeC3Read.svg
   :align: center

   Read timing

Output RGB565
*************
The data output in RGB565 format is shown in the following figure:

.. figure:: ../../picture/DBITypeC3RGB565.svg
   :align: center

   RGB565 output

Output RGB666
*************
The data output in RGB666 format is shown in the following figure:

.. figure:: ../../picture/DBITypeC3RGB666.svg
   :align: center

   RGB666 output

Output RGB888
*************
The data output in RGB888 format is shown in the following figure:

.. figure:: ../../picture/DBITypeC3RGB888.svg
   :align: center

   RGB888 output

DBI Type C 4-Line
-------------------

Write timing
*********
The DBI Type C mode is a 4-wire 8-bit serial interface. The sequence of writing data from the MCU to the display module is shown in the following figure:

.. figure:: ../../picture/DBITypeC4Write.svg
   :align: center

   Write timing

- CSX: Chip select signal. When the signal is low, the display module is selected, and when it is high, the display module will ignore all other interface signals
- D/CX: Data/Command selection signal. If the signal is low, the information transmitted by SDA is a command; if the signal is high, the information transmitted by SDA is display data or command parameters
- SCL: Serial clock input signal. Used to provide a clock signal for data transmission
- SDA: Serial data input/output signal. Used to transfer commands, command parameters, or data

Read timing
*********
The sequence of MCU reading data from the display module is shown in the following figure:

.. figure:: ../../picture/DBITypeC4Read.svg
   :align: center

   Read timing

Output RGB565
*************
RGB565格式数据输出如下图所示：

.. figure:: ../../picture/DBITypeC4RGB565.svg
   :align: center

   RGB565 output

Output RGB666
*************
The data output in RGB666 format is shown in the following figure:

.. figure:: ../../picture/DBITypeC4RGB666.svg
   :align: center

   RGB666 output

Output RGB888
*************
The data output in RGB888 format is shown in the following figure:

.. figure:: ../../picture/DBITypeC4RGB888.svg
   :align: center

   RGB888 output

QSPI
--------

Write timing
*********
Taking 1-wire command, 1-wire 3-byte address, and 1-wire data pattern as examples, the timing of MCU writing data to the Display Module is shown as follows:

.. figure:: ../../picture/DBIQspiWrite.svg
   :align: center

   Write timing

- CSX: chip select signal. When the signal is Low, the display module is selected; when it is High, the display module ignores all other interface signals.

- CLK: clock input signal, which provides a clock signal for data transfer.

- SDA0: The data line 0 is used to transmit commands, addresses or data.

- SDA1: The data line 1 is used to transmit commands, addresses or data.

- SDA2: The data line 2 is used to transmit commands, addresses or data.

- SDA3: The data line 3 is used to transmit commands, addresses or data.

Read timing
*********
Taking 1-wire command, 1-wire 3-byte address, and 1-wire data pattern as examples, the timing of MCU reading data from the Display Module is shown as follows:

.. figure:: ../../picture/DBIQspiRead.svg
   :align: center

   Read timing

1-Wire Command, 1-Wire Address and 1-Wire Data Pattern
********************************
Taking the command 0x02 and 3-byte address 0x002C00/0x003C00 as example, the output of RGB565 data under 1-wire command, 1-wire address and 1-wire data pattern is shown as follows:

.. figure:: ../../picture/DBIQspi111RGB565.svg
   :align: center

   RGB565 output

The data output in RGB666 format is shown as follows:

.. figure:: ../../picture/DBIQspi111RGB666.svg
   :align: center
   :scale: 70%

   RGB666 output

The data output in RGB888 format is shown as follows:

.. figure:: ../../picture/DBIQspi111RGB888.svg
   :align: center

   RGB888 output

1-Wire Command, 1-Wire Address and 4-Wire Data Pattern
********************************
Taking the command 0x32 and 3-byte address 0x002C00/0x003C00 as example, the output of RGB565 data under 1-wire command, 1-wire address and 4-wire data pattern is shown as follows:

.. figure:: ../../picture/DBIQspi114RGB565.svg
   :align: center

   RGB565 output

The data output in RGB666 format is shown as follows:

.. figure:: ../../picture/DBIQspi114RGB666.svg
   :align: center

   RGB666 output

The data output in RGB888 format is shown as follows:

.. figure:: ../../picture/DBIQspi114RGB888.svg
   :align: center

   RGB888 output

1-Wire Command, 4-Wire Address and 4-Wire Data Pattern
********************************
Taking the command 0x12 and 3-byte address 0x002C00/0x003C00 as example, the output of RGB565 data under 1-wire command, 4-wire address and 4-wire data pattern is shown as follows:

.. figure:: ../../picture/DBIQspi144RGB565.svg
   :align: center

   RGB565 output

The data output in RGB666 format is shown as follows:

.. figure:: ../../picture/DBIQspi144RGB666.svg
   :align: center

   RGB666 output

The data output in RGB888 format is shown as follows:

.. figure:: ../../picture/DBIQspi144RGB888.svg
   :align: center

   RGB888 output

Input pixel format
-------------------
The DBI module supports eight different input pixel RGB formats and six YUV444 formats. The RGB arrangements in the memory are shown as follows:

.. figure:: ../../picture/DBIMemory.svg
   :align: center

   Input Pixel RGB Format

For the YUV444 arrangement in the memory, just replace R with Y, G with U, and B with V.

Configuration of CS Signal Pull-up Release Condition
------------------------
In Type B and Type C modes, the CS signal pull-up release condition can be configured by the CONT\_EN bit in the register CONFIG. If this function cannot be enabled, the CS signal is released once after each pixel is transmitted. That is, the CS signal is pulled up every two pixels. If it is enabled, the CS signal will not be released during a single transmission. The CS signal will be pulled up and released only after this transmission is completed.

In QSPI mode, the CS signal pull-up release condition can be configured by the CS\_STRETCH bit in the register CONFIG. If this function is disabled, during a single transmission, when FIFO is empty (that is, all the data in FIFO is sent out and no new data is filled in), the CS signal will be pulled up and released. If it is enabled, during a single transmission, when FIFO is empty (that is, all the data in FIFO is sent out and no new data is filled in), the CS signal will remain at a low level and wait for new data to be filled in.

Interrupt
--------
DBI has the following interrupts:

- end of transfer interrupt
- TX FIFO request interrupt
- FIFO overrun error interrupt

By setting a pixel count value, the transmission end interrupt will be generated when the transmitted pixel data reaches the count value, and both Type B and Type C will generate this interrupt;

When TFICNT in DBI_FIFO_CONFIG_1 is greater than TFITH, a TX FIFO request interrupt is generated, and the interrupt flag will be automatically cleared when the condition is not met;

The FIFO overflow error interrupt will be generated when Overflow or Underflow occurs in the TX.

DMA
--------
DBI TX supports DMA transfer mode, which requires setting the TX FIFO threshold through bit <TFITH> of register DBI_FIFO_CONFIG_1.
When this mode is enabled, if TFICNT is greater than TFITH, a DMA TX request will be triggered. After the DMA is configured, when the DMA receives the request, it will transfer the data from the memory to the TX FIFO according to the settings.

.. only:: html

   .. include:: dbi_register.rst

.. raw:: latex

   \input{../../en/content/dbi}