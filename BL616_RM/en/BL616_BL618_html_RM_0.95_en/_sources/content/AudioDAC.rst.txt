===========
AudioDAC
===========

Overview
=====
A PWM modulation module is built in the chip to output analog signals to drive the speaker, so as to realize audio playback.

Features
===========
- One 16-bit DAC PWM is integrated, supporting one analog PWM differential output
  * Sampling rate: 8kâ€“48k
  * Signal to noise ratio (AW): 95 dB gain
  * Harmonic distortion + noise: -70dB @ 0dB gain

- The GPDAC module can be used as an audio analog signal output, converting the processed audio data directly from the dual-channel GPDAC module into an analog differential signal output.

  * Independent digital volume control and support for slope adjustable fade volume adjustment and fade mute
  * Mixer support for dual-channel audio data input and the ability to select one of the mono outputs or mix it into one channel for output
  * 32-bit width FIFO, depth 32, support 32bit/24bit/20bit/16bit four data formats, support mono data source and two-channel mixed data source
  * Support DMA transfer mode

Clock Tree
====================
Users need to first configure the Audio PLL output clock to 491.52M or 451.58M, corresponding to the 48K series and 44.1K series sample rates, respectively, and select the 5-division frequency of the Audio PLL output as the AudioDAC clock source.

Within the AudioDAC module, the crossover coefficient of each sub-module is automatically configured according to the sample rate setting, so there is no need to set the crossover coefficient manually.
The clock dividing frequency is shown as follows.

.. figure:: ../../picture/clockTreePWM.svg
   :align: center

   Block Diagram of Clock

Functional Description
===========

The block diagram of AudioDAC is shown as follows.

.. figure:: ../../picture/AudioDAC_Arc.svg
   :align: center

   Block Diagram of Module

AudioDAC will process the data in TX FIFO through Mixer first, then perform digital volume adjustment, interpolation filtering and other processing, DSM modulation, and according to the set output mode, generate data in the corresponding format to PWM modulator or GPDAC module. The GPDAC module can output analog signal directly, while the PWM modulator output signal needs to be converted to analog signal by external RC filter circuit.

AudioDAC Interrupt
-------------
AudioDAC supports the following interrupt control modes:

- TX FIFO request interrupt

  * A TX FIFO request interrupt is generated when TX\_DRQ\_CNT in TX\_FIFO\_CTRL is greater than TX\_TRG\_LEVEL. When the condition is not met, the interrupt flag is cleared automatically.

- TX FIFO underrun interrupt

  * When there is no data in TX FIFO, but the user enables TX FIFO state machine through TX\_CH\_EN in TX\_FIFO\_CTRL, the TX FIFO underrun interrupt is generated.

- TX FIFO overrun interrupt

  * When the user fills in data that exceeds the maximum depth of TX FIFO, it leads to TX FIFO overflow and cause a TX FIFO overrun interrupt.

- Volume adjustment complete interrupt

  * Audio DAC volume control supports the fade-in/fade-out function. When volume adjustment is completed, the "volume adjustment complete interrupt" is generated, indicating that fade-in/fade-out adjustment is completed.

FIFO Format Control
--------------
AUPWM_TX_FIFO_CTRL can control the format of audio data stored in FIFO and set the number of channels of audio data source.
The FIFO will intercept the valid 16bit data according to the data format and channel number setting, and use it as the input of the corresponding channel of the next Mixer level.

The FIFO controller supports the following four data storage formats, which are determined by FIFO\_CTRL\[25:24].

 - Mode 0:

    32bit mode, DATA[15:0] = {FIFO[31:16]}, the highest bit of valid data is at 31 bits

 - Mode 1:

    24bit mode, DATA[15:0] = {FIFO[23:8]}}, the highest bit of valid data is 23 bits

 - Mode 2:

    20bit mode, DATA[15:0] = {FIFO[19:4]}}, the highest bit of valid data is 19 bits

 - Mode 3:

    16bit mode, DATA[15:0] = {FIFO[15:0]}, the highest bit of valid data is 15 bits

In most cases, Mode3 is selected when the audio source data is 16bit wide, and the maximum resolution of the Audio DAC is 16bits.
Other modes exist because if the size of the audio data to be played is 32bit, where the effective data width is 32/24/20 bits, the user does not need to convert the data to 16bit mode in the software, and the FIFO automatically converts it for efficiency.

The number of data source channels of Audio DAC is controlled by the tx_ch_en segment of audac_fifo_ctrl register, the corresponding effect is as follows:

+ 0: the left and right channels are closed, the data in the FIFO will not be transferred to the Mixer and the Audio DAC stops playing
+ 1: In mono mode, all data in the FIFO is used as left channel data and will be input to the Mixer's left channel one by one.
+ 2: Mono mode, where all data in the FIFO is used as right channel data and is input to the Mixer's right channel one by one
+ 3: Dual mode, where the odd numbered data in the FIFO is used as the left channel data and the even numbered data is used as the right channel data, which are input to the left and right channels of the Mixer respectively

Because the Audio DAC only supports one channel output, mono source data should be selected in most cases. However, when the source data is already dual-channel and cannot be changed, you can use the Mixer to select one of the channels or mix it for playback, as described in the Mixer later in this article.

Startup of FIFO and DMA Transfer
------------------------
The TX FIFO data of Audio DAC can be carried via DMA. To enable DMA mode, you need to set audac_0 register's dac_itf_en bit DMA interface enable to 1, and audac_fifo_ctrl register's tx_drq_en bit DMA request enable to position 1.

The FIFO data volume threshold for triggering DMA requests is selected by configuring the tx_drq_cnt segment of the audac_fifo_ctrl register with four options, 8/16/32, and the same interrupt threshold as configured in the tx_trg_level segment.

The user can get the number of the current number of free FIFOs in real time through txa_cnt of audac_fifo_status register.

When the value of the number of free in the FIFO is greater than the set threshold, a DMA carry will be triggered.

Note that if the remaining number of free in the TX FIFO is less than the number of DMA moves in at one time, an overrun error is triggered. If the DMA does not move in the data in time when the Audio ADC is working, an underrun error is also triggered, so pay attention to the configuration of the FIFO threshold and DMA brust.

Configurable Mixer Channel Mixer
----------------------------
The Audio DAC supports playing only one channel of audio playback. If the source data is a cross-mix of two channels, the Mixer can be used to select one of the audio channels for playback or to mix the two channels for playback.
Controlled by the dac_mix_sel segment of the audac_1 register, it supports the following four modes:

    + Selecting only the left channel for playback (odd times of data)
    + Selecting only the right channel for playback (even number of times of data)
    + Playback by summing the left and right channel values
    + Playback by taking the average of the left and right channel values

Note that the channel configuration of Mixer mixer must match each other with the channel configuration of FIFO, otherwise Audio DAC will stop working.
The detailed process is shown in the following figure.

.. figure:: ../../picture/audacMixer.svg
   :align: center

   Mixer

When the playback source is configured as stereo, the data moved sequentially by DMA will be filled into the left and right channels sequentially, which requires that the data source is also stored in L-R-L-R cross-ordering.
At this point, you can use the Mixer selector to choose which channel is needed or to sum or average the two channels into the next level of modulation circuit.

Note the tx_ch_en and Mixer selection. If you put the mono data into the left channel by tc_ch_en, but the Mixer selects the right channel, it will cause an error and cannot be played.

Volume Control
--------------------------------
The user can configure the volume through the dac_s0_volume register of audac_s0, the gain range is -95.5dB-18dB, and the step unit is 0.5dB.
When dac_s0_volume_update register is 1, the volume will be updated to take effect.

User can select the volume adjustment mode by dac_s0_mute_softmode, dac_s0_ctrl_mode, there are 3 adjustment modes:

+ 0: Direct change, the new volume will be changed from the original volume to the new volume configuration immediately after the new volume takes effect.
+ 1: Over zero fade mode: After the new volume takes effect, it will be changed gradually and linearly from the original volume to the new volume, and will only change the volume controversy when the audio data is 0.
+ 2: Fade mode, the new volume will gradually change linearly from the original volume to the new volume after the new volume takes effect.

The slope of the over-zero fade is controlled by dac_s0_ctrl_zcd_rate and the slope of the fade mode is controlled by dac_s0_ctrl_rmp_rate and can be configured to change 0.5dB every 2 to 2048 samples, with the sample points calculated to the 2^(n+1) power.
When the volume tries to change during a fade but no zero data is encountered for a long time, a step of 0.5dB will be forcibly updated when the value set by dac_s0_ctrl_zcd_timeout is exceeded.

It also supports setting mute directly without changing the volume, and mute also supports fade mode. The fade slope of mute and the fade slope of mute release are controlled by dac_s0_mute_rmpdn_rate and dac_s0_mute_rmpup_rate respectively.

ZeroDetect
-----------------------------------
AudioDAC provides ZeroDetect function. When this function is turned on (zd_en position 1 of audac_zd_0 register), if the Mixer mixer output keeps zero data and the amount exceeds the threshold (zd_time segment of audac_zd_0 register), it will turn off the DSM modulator and keep the output at zero. The DSM modulator will be turned off and the output will be kept at 0. The purpose of this is to reduce the bottom noise caused by broadcasting zero data with muting.

Configuration Process
================================

1. According to the audio sample rate to be broadcast, select the corresponding sample rate.
2. according to the actual demand, configure to PWM output mode or GPDAC output mode, GPDAC mode requires additional configuration of the DAC module, see the DAC description document for details.
3. according to the number of audio channels to be broadcast, configure the FIFO and Mixer channel mixer.
4. Configure DMA to carry data to the AudioDAC TX FIFO.
5. Enable the channel via tx_ch_en of audac_fifo_ctrl to start playback.
6. Adjust the volume during playback (optional).

.. only:: html

   .. include:: audac_register.rst

.. raw:: latex

   \input{../../en/content/audac}